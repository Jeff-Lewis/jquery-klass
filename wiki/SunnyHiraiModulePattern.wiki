#summary Sunny Hirai's Version of the Module Pattern

= Sunny Hirai's Module Pattern =

Inspired by Douglas Crockford's articles on the Module Pattern with a healthy dosage of pragmatism added.

{{{
$.extend({
  animal: function( name ){
    var me = {
      init: function(){
        me.name = name;
      },
      print: function( msg ){
        alert( msg );
      },
      say: function( msg ){
        me.print( me.name + ': ' + msg );
      },
      howl: function( msg ){
        me.print( me.name + ': awoooo... ' + msg );
      }
    }
    me.init();
    return $.limitKeys( me, 'say', 'howl' );
  }
})
}}}

Although subtle, there are several important benefits to this pattern that (a) reduces the kinds of bugs you might encounter (b) makes playing easier and (c) makes the code more readable.

  # The first declaration is the object "me".
  # The first method in "me" is "init"
  # "me.init()" is called immediately after the declaration
  # "$.limitKeys" is called during the return

== Reducing Kinds of Bugs ==
