#summary Basic Usage of Klass
#labels Featured

== A Simple Class ==

{{{
Animal = $.klass({
  init: function( sound ){
    this.sound = sound;
  },
  say: function( msg ){
    alert( this.sound + ', ' + msg );
  }
})
}}}

  * *init* is called automatically during instantiation.

== Instantiating and Using Class ==

{{{
fido = new Animal( "Ruff" );
whiskers = new Animal( "Meow" );

fido.say( "Kibbles and Bits" );
// Ruff, Kibbles and Bits

whiskers.say( "Fish Please" );
// Meow, Fish Please
}}}

== Create a Subclass With Inheritance ==

{{{
// Extending Animal to create Dog
Dog = $.klass( Animal, {
  // called automatically
  init: function( name ){
    this.name = name;
    this.up( 'Woof Woof' );
  },
  say: function( msg ){
    // the word 'arguments' always has to be passed in as is.
    // To find out why, see the FAQ in this wiki under 'up'
    this.up( arguments, this.name + ': ' + this.noise + msg );
  }
})

fido = new Dog( "Fido" );
fido.bark( 'I want Kibbles and Bits' );

// alert => "Fido: Ruff! I want Kibbles and Bits"
}}}

== Using Binding ==